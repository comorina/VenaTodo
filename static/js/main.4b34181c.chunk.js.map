{"version":3,"sources":["component/Form.js","component/Todo.js","component/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","classNmae","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAoCeA,EAhCF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAe1C,OACI,iCACI,uBAAOC,MAAOD,EAAWE,SAfR,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBJ,EAAaM,EAAEG,OAAOL,QAamCM,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAXQ,SAACN,GACrBA,EAAEO,iBACFX,EAAS,GAAD,mBACDD,GADC,CAEJ,CAACa,KAAMX,EAAWY,WAAW,EAAOC,GAAkB,IAAfC,KAAKC,aAEhDlB,EAAa,KAK2BW,UAAU,cAAcD,KAAK,SAAjE,iBAGA,qBAAKC,UAAU,SAAf,SACI,yBAAQQ,KAAK,QAAQR,UAAU,cAA/B,UACI,wBAAQP,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCCLgB,EAzBF,SAAC,GAA2D,IAA1DN,EAAyD,EAAzDA,KAAKO,EAAoD,EAApDA,KAAMpB,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,SAAuC,EAA7BF,aAA6B,EAAfG,UAgBrD,OACI,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAW,YAAc,IAA1D,SAAiED,IACjE,wBAAQF,QAbQ,WACpBV,EAASD,EAAMqB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAOK,EAAKL,GAChB,2BACOO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAMP,mBACA,wBAAQX,QAlBM,WAClBV,EAASD,EAAMuB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QAiBzC,wBCFGU,EAnBE,SAAC,GAAgD,IAA/CzB,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,SAAUF,EAA6B,EAA7BA,aAAcG,EAAe,EAAfA,UAC9C,OACI,qBAAKwB,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACK1B,EAAMqB,KAAI,SAACD,GAAD,OACP,cAAC,EAAD,CACAA,KAAMA,EACFpB,MAAOA,EACPC,SAAUA,EAEVY,KAAMO,EAAKP,KACXd,aAAcA,EACdG,UAAWA,GAHNkB,EAAKL,YCMnBY,MAdf,WACE,MAAkCC,mBAAS,IAA3C,mBAAO1B,EAAP,KAAkBH,EAAlB,KACA,EAA0B6B,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcC,EAAd,KACA,OACE,gCACE,6CAGA,cAAC,EAAD,CAAMC,UAAWA,EAAWF,MAAOA,EAAOC,SAAUA,EAAUF,aAAcA,IAC5E,cAAC,EAAD,CAAUE,SAAUA,EAAUD,MAAOA,EAAOD,aAAcA,EAAcG,UAAWA,QCF1E2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b34181c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText}) => {\r\n    // here javaScript\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTidiHandler=(e)=>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, \r\n            {text: inputText, completed: false, id:Math.random() *1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTidiHandler} className=\"todo-button\" type=\"submit\">\r\n                Add\r\n            </button>\r\n            <div className=\"select\">\r\n                <select name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Todo = ({text,todo, todos, setTodos, setInputText, inputText}) => {\r\n    // Event\r\n    const deleteHandler = ()=>{\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }    \r\n            return item;\r\n        }));\r\n    };\r\n    return(\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler}> edit</button>\r\n            <button onClick={deleteHandler}>delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nconst TodoList = ({todos, setTodos, setInputText, inputText}) => {\r\n    return (\r\n        <div classNmae=\"todo-container\">\r\n            <ul classNmae=\"todo-list\">\r\n                {todos.map((todo) => (\r\n                    <Todo \r\n                    todo={todo}\r\n                        todos={todos} \r\n                        setTodos={setTodos}\r\n                        key={todo.id} \r\n                        text={todo.text} \r\n                        setInputText={setInputText}\r\n                        inputText={inputText}     \r\n                    />\r\n                ))}\r\n            </ul>             \r\n        </div>\r\n    );\r\n};\r\nexport default TodoList;","import React, {useState} from 'react';\nimport './App.css';\nimport Form from './component/Form';\nimport TodoList from './component/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  return (\n    <div>\n      <header>\n        My Todo\n      </header>\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText}/>\n      <TodoList setTodos={setTodos} todos={todos} setInputText={setInputText} inputText={inputText}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}